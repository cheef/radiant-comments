<% include_stylesheet 'admin/comments' %>
<h1>
  <% if @page -%>
    <%= @page.comments.count %> <%= "#{params[:status].titleize} " if params[:status] %><%= pluralize(@page.comments.count, 'Comment') %> on <%= link_to @page.title, edit_admin_page_path(@page) %>
  <% else -%>
    <%= params[:status].titleize if params[:status] %> Comments
  <% end -%>
</h1>

<ul id="comment-nav">
  <li class="all"><%= link_or_span_unless_current("All", :status => 'all', :page_id => params[:page_id]) %></li>
  <li class="approved"><%= link_or_span_unless_current("Approved", :status => "approved", :page_id => params[:page_id]) %></li>
  <li class="unapproved"><%= link_or_span_unless_current("Unapproved", :status => "unapproved", :page_id => params[:page_id]) %></li>
  <li class="csv"><%= link_to "Download CSV", :format => :csv %></li>
</ul>

<table id="comments" class="index" border="0" cellspacing="0" cellpadding="0">
  <tbody>
    <%= render :partial => "comment", :collection => @comments %>
  </tbody>
</table>

<p><%= link_to "Delete All Unapproved", destroy_unapproved_admin_comments_url, :method => :delete %></p>

<%= will_paginate @comments %>

<p><% if Comment.spam_filter == AkismetSpamFilter %>
  <small class="notice">Protected by <a href="http://akismet.com/">Akismet</a></small>
<% elsif Comment.spam_filter == MollomSpamFilter %>
  <small class="notice">Protected by <a href="http://mollom.com">Mollom</a></small>
<% elsif Comment.spam_filter == SimpleSpamFilter && SimpleSpamFilter.required? %>
  <small class="notice">Comments are protected from spam by a simple challenge/response field.  For more robust spam filtering, try <a href="http://mollom.com">Mollom</a> or <a href="http://akismet.com/">Akismet</a>.</small>
<% elsif current_user.developer? || current_user.admin? %>
  <small class="note">You have 3 built-in options for spam protection although currently comments are not automatically protected. Install <a href="http://mollom.com">Mollom</a> or <a href="http://akismet.com/">Akismet</a> to protect against comment spam through an external service, or use the &lt;r:comments:spam_answer_tag /&gt;. Instructions may be found in the README.</small>
<% end %></p>